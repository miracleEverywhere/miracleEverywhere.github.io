import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as s,e,o as a}from"./app-DADm7Q5T.js";const n="/assets/system-global-playerlist-CiJfMEz_.png",p="/assets/system-global-uidmap-B7_O78Ds.png",o="/assets/system-global-uidmap-json-CxFlpMrA.png",l="/assets/system-global-metrics-_5DG5NWA.png",r="/assets/system-global-game-update-CMgUMbtN.png",c="/assets/system-global-mod-update-BkgHU7RX.png",d="/assets/system-cluster-auto-restart-Dr-Cxx-Z.png",g="/assets/system-cluster-auto-backup-BtIRfOcy.png",h="/assets/system-cluster-backup-clean--YcaeOrJ.png",u="/assets/system-cluster-keepalive-DkTjZG1j.png",m="/assets/system-cluster-auto-start-stop-BcWZkB4x.png",k="/assets/system-cluster-64bit-Cqc8dTXe.png",f="/assets/system-cluster-tick-rate-jmLGrV7K.png",y={};function b(v,i){return a(),s("div",null,i[0]||(i[0]=[e('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>该页面位于 <strong>设置-系统</strong></p></div><p>系统设置分为两部分：<strong>全局设置</strong>和<strong>集群设置</strong>，全局设置影响整个平台的所有集群，仅管理员可修改，集群设置影响当前集群，管理员和拥有对应集群权限的用户可修改</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>无论是全局设置还是集群设置，涉及到重启(定时重启等)功能，平台会将设定的时间提前15分钟</p><p>例如，定时重启的时间为<code>06:30:00</code>，那么平台会在<code>06:15:00</code>的时候开始运行宣告，告诉正在游戏的玩家还有15分钟就要重启了，然后平台<code>sleep</code>15分钟，在<code>06:30:00</code>执行重启</p><p>如果你想测试定时重启功能，当前时间是<code>08:00:00</code>，你想在<code>08:01:00</code>重启服务器，那么你设置定时重启时间为<code>08:01:00</code>，这并不会进行重启，因为平台将定时重启时间设置为了<code>07:46:00</code>；正确的设置应该为<code>08:16:00</code>，在<code>08:01:00</code>时看平台有没有发出公告，再等待15分钟后看服务器有没有重启</p></div><h2 id="全局设置" tabindex="-1"><a class="header-anchor" href="#全局设置"><span>全局设置</span></a></h2><h4 id="玩家列表" tabindex="-1"><a class="header-anchor" href="#玩家列表"><span>玩家列表</span></a></h4><p>可配置获取游戏玩家列表的获取频率，单位为秒</p><figure><img src="'+n+'" alt="玩家列表" tabindex="0" loading="lazy"><figcaption>玩家列表</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><p>该功能不可关闭</p></div><p>定义获取频率为<code>x</code>秒，平台会获取对应集群的所有<strong>正在运行</strong>的世界，如果有主世界，则在主世界执行获取命令，如果没有，则在所有的世界中执行获取命令，直到执行成功。如果所有世界都执行失败，则获取失败</p><div class="language-lua line-numbers-mode" data-highlighter="shiki" data-ext="lua" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">screen</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> -</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">S</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> \\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;&quot; </span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">+ </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">world</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.ScreenName + </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -p 0 -X stuff </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">for i, v in ipairs(TheNet:GetClientTable()) do  print(string.format(</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">playerlist %s [%d] %s &lt;-@dmp@-&gt; %s &lt;-@dmp@-&gt; %s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\\\&quot;</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">, 99999999, i-1, v.userid, v.name, v.prefab )) end$(printf </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\\\\\\\</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">r)</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\&quot;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>平台会根据上述命令的执行结果，将对应的玩家信息例如：玩家昵称、UI、角色等存入缓存，等待使用，缓存最多存放2880个玩家列表，供<strong>工具-玩家统计</strong>页面使用</p><p>重启服务器后，缓存会被清除</p><div class="hint-container important"><p class="hint-container-title">重要</p><p><strong>设置-玩家</strong>中的<strong>玩家列表</strong>功能依赖此设置，如果频率越快(<code>x</code>越小)，则玩家信息更新越快，但世界日志会越多，建议保持默认<code>30</code>秒</p></div><h4 id="昵称字典维护" tabindex="-1"><a class="header-anchor" href="#昵称字典维护"><span>昵称字典维护</span></a></h4><p>该功能可关闭(默认开启)，可设置频率(默认为5分钟)</p><figure><img src="'+p+'" alt="昵称字典维护" tabindex="0" loading="lazy"><figcaption>昵称字典维护</figcaption></figure><p>定义频率为<code>x</code>分钟，如果该功能开启，平台会每隔<code>x</code>分钟，将游戏中的玩家的玩家昵称和UID写入<code>dmp_files/uid_map/集群名.json</code>文件中</p><figure><img src="'+o+'" alt="文件内容" tabindex="0" loading="lazy"><figcaption>文件内容</figcaption></figure><p><code>dmp_files/uid_map/集群名.json</code>文件是一个未经加密的<code>json</code>文件，<code>key</code>是UID，<code>value</code>是昵称</p><p>如果玩家的昵称有修改过，则会自动更新昵称字典，如果有新玩家加入游戏，也会将新玩家的UID和昵称写入文件</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>该功能影响<strong>设置-玩家</strong>页面中的<strong>管理员</strong>、<strong>黑名单</strong>、<strong>白名单</strong>和<strong>历史玩家</strong>，建议保持默认设置</p></div><h4 id="系统监控" tabindex="-1"><a class="header-anchor" href="#系统监控"><span>系统监控</span></a></h4><p>平台会每隔<code>30</code>秒获取一次<code>CPU</code>、<code>内存</code>、<code>网络上传</code>和<code>网络下载</code>的监控数据，并写入缓存，缓存最大长度为720，即最多6个小时的系统监控</p><figure><img src="'+l+'" alt="系统监控" tabindex="0" loading="lazy"><figcaption>系统监控</figcaption></figure><p>此功能默认开启</p><div class="hint-container important"><p class="hint-container-title">重要</p><p>该功能影响<strong>工具-系统监控</strong>页面</p></div><h4 id="自动更新" tabindex="-1"><a class="header-anchor" href="#自动更新"><span>自动更新</span></a></h4><p>平台会在指定的时间检查饥荒是否有版本更新，如果没有就不执行任何操作，如果有的话，会执行：</p><ul><li><p>提前15分钟发出公告，系统将在15分钟后重启</p></li><li><p>关闭所有集群中的所有世界</p></li><li><p>更新游戏</p></li><li><p>启动所有集群的所有世界</p></li></ul><figure><img src="'+r+'" alt="自动更新" tabindex="0" loading="lazy"><figcaption>自动更新</figcaption></figure><div class="hint-container warning"><p class="hint-container-title">注意</p><p>目前有点业务逻辑问题，如果你在<strong>集群管理</strong>中关闭了某个集群(目的是为了关闭这个集群，不让它再启动)，但是经过游戏更新后还是会被启动起来，这点后续会进行优化(写这个文档时，饥荒管理平台的最新版本是v2.0.4)</p></div><h4 id="玩家更新模组" tabindex="-1"><a class="header-anchor" href="#玩家更新模组"><span>玩家更新模组</span></a></h4><p>如果在游戏中遇到了<code>服务器需要从Steam创意工坊获得最新版本</code>的提示，代表有模组需要更新了，这时候是无法进入存档的，存档中的玩家会一直收到这个提示</p><p>开启此功能，平台会每隔一段时间(对应设置中的频率)引导游戏中的玩家，输入对应指令</p><p>如果玩家输入了该指令，服务器就会重启并自动更新模组</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>即使两个世界运行在不同的虚拟机上，也可以自动重启更新模组</p></div><figure><img src="'+c+'" alt="玩家更新模组" tabindex="0" loading="lazy"><figcaption>玩家更新模组</figcaption></figure><p>此功能原理：</p><p>令检查频率为<code>x</code>分钟</p><ol><li><p>平台每隔<code>x</code>分钟获取饥荒聊天日志的最后100行，如果出现<code>服务器需要从Steam创意工坊获得最新版本</code>关键字则进入&lt;2&gt;，否则不执行任何操作</p></li><li><p>平台生成一个长度为<code>7</code>的更新ID，更新ID由大写字母和数字组成</p></li><li><p>平台向饥荒服务器发送公告，公告内容为：<code>饥荒管理平台检测到模组需要更新，本次更新ID为XXXXXXX，请输入ID-LKGX进行模组更新</code></p></li><li><p>每隔60秒检查一次玩家聊天日志，如果捕获到<code>更新ID-LKGX</code>关键字，则获取其中的更新ID</p></li><li><p>校验更新ID是否合法，如果合法则进行公告并在1分钟后重启服务器，否则不执行任何操作</p></li></ol><div class="hint-container tip"><p class="hint-container-title">提示</p><p>因为饥荒的主从世界之间会进行聊天记录的同步，因此对应集群下的所有世界都会重启</p></div><h2 id="集群设置" tabindex="-1"><a class="header-anchor" href="#集群设置"><span>集群设置</span></a></h2><h4 id="自动重启" tabindex="-1"><a class="header-anchor" href="#自动重启"><span>自动重启</span></a></h4><p>在指定时间重启饥荒服务器，此功能主要用于自动更新模组，因为饥荒服务器在启动的过程中，会自动检查启用的模组是否有更新，如果有则会自动下载并更新</p><figure><img src="'+d+'" alt="自动重启" tabindex="0" loading="lazy"><figcaption>自动重启</figcaption></figure><p>该功能默认开启，默认的重启时间为每天<code>06:47:19</code>，可按需更改</p><h4 id="自动备份" tabindex="-1"><a class="header-anchor" href="#自动备份"><span>自动备份</span></a></h4><p>在指定时间，备份当前饥荒服务器</p><figure><img src="'+g+'" alt="自动备份" tabindex="0" loading="lazy"><figcaption>自动备份</figcaption></figure><p>该功能默认开启，默认的备份时间为每天<code>06:13:57</code></p><p>生成的备份文件名为<code>年-月-日-时-分-秒.tgz</code>，会将该文件保存在<code>dmp_files/backup/集群名</code>目录</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了方便恢复存档，备份文件中还包含一个数据库文件<code>DstMP.sdb</code></p></div><h4 id="备份清理" tabindex="-1"><a class="header-anchor" href="#备份清理"><span>备份清理</span></a></h4><p>该功能默认关闭，会定时清理自动、手动创建的存档备份文件</p><p>如果开启此功能，需要设置大于0的数字，如设置30，则会删除30天前创建的备份文件</p><figure><img src="'+h+'" alt="备份清理" tabindex="0" loading="lazy"><figcaption>备份清理</figcaption></figure><h4 id="自动保活" tabindex="-1"><a class="header-anchor" href="#自动保活"><span>自动保活</span></a></h4><p>该功能会自动恢复异常的饥荒服务器</p><figure><img src="'+u+'" alt="自动保活" tabindex="0" loading="lazy"><figcaption>自动保活</figcaption></figure><p>该功能默认开启，检测频率默认为30分钟</p><p>自动保活基于<strong>全局设置</strong>中的<strong>玩家列表</strong>获取功能，平台每隔30分钟会检查一次最近一次成功获取玩家列表的<strong>饥荒服务器时间</strong>，如果本次时间与30分钟前的时间一致，就代表服务器异常，执行对应世界的重启；如果时间不一致，则代表饥荒服务器无异常</p><div class="hint-container warning"><p class="hint-container-title">注意</p><p>此功能的运行对<strong>检测频率</strong>十分敏感</p><hr><p>举个例子，如果设置频率为30分钟，平台在13:00分检测到服务器正常，平台将13:00记录为正常；13:14分服务器崩溃，平台在13:30分进行检测时，会获取到上次正常获取玩家列表的时间为13:14分，13:14≠13:00，因此会判断服务器正常，不会重启服务器，应记录13:14为正常；14:00平台再一次获取玩家列表的时间是13:14，该记录与13:30记录的13:14一致，所以平台会标记当前饥荒服务器为异常，执行重启。</p><ul><li>上述文字对应的时间线，格式为[实际时间] [饥荒服务器当前状态] [平台标记的正常时间] [平台是否重启饥荒服务器]： <ul><li>[13:00] [<span style="color:#67C23A;font-weight:bolder;">正常</span>] [12:30] [<strong>否</strong>]</li><li>[13:14] [<span style="color:#F56C6C;font-weight:bolder;">异常</span>] [13:00] [<strong>否</strong>]</li><li>[13:30] [<span style="color:#F56C6C;font-weight:bolder;">异常</span>] [13:14] [<strong>否</strong>]</li><li>[14:00] [<span style="color:#F56C6C;font-weight:bolder;">异常</span>] [13:14] [<strong>是</strong>]</li></ul></li></ul><hr><p>可以看到，将检测频率这是为30分钟的局限性是：服务器13:14分就异常了，但是平台执行重启操作在14:00，中间间隔了46分钟，理论上检测频率为30分钟的最大间隔为59分钟</p><p><strong>如果对饥荒服务器是否正常运行比较在意的同学，可以适当将检测频率调小一点，但注意不要过小(1分钟)，否则会导致异常重启</strong></p></div><h4 id="定时开启关闭集群" tabindex="-1"><a class="header-anchor" href="#定时开启关闭集群"><span>定时开启关闭集群</span></a></h4><p>在指定的时间开启/关闭饥荒服务器，此功能默认关闭</p><figure><img src="'+m+'" alt="定时开启关闭集群" tabindex="0" loading="lazy"><figcaption>定时开启关闭集群</figcaption></figure><h4 id="_64位启动" tabindex="-1"><a class="header-anchor" href="#_64位启动"><span>64位启动</span></a></h4><p>使用64位/32位的饥荒程序来启动饥荒服务器，默认关闭(即使用32位程序启动)</p><figure><img src="'+k+'" alt="64位启动" tabindex="0" loading="lazy"><figcaption>64位启动</figcaption></figure><div class="hint-container tip"><p class="hint-container-title">提示</p><ul><li>64位优势 <ul><li>更高效的CPU指令集（如SSE/AVX）和寄存器利用，提升计算性能（如物理模拟、生物逻辑）</li><li>减少内存分页切换，降低延迟（对高负载服务器重要）</li></ul></li><li>32位优势 <ul><li>内存占用略低（指针和数据类型更小），但对DST服务器影响微乎其微</li></ul></li></ul></div><h4 id="tick-rate" tabindex="-1"><a class="header-anchor" href="#tick-rate"><span>Tick Rate</span></a></h4><p>该配置共有15、30、45和60四个选项，默认为15</p><figure><img src="'+f+'" alt="Tick Rate" tabindex="0" loading="lazy"><figcaption>Tick Rate</figcaption></figure><p>Tick Rate是一个核心参数，直接影响游戏的响应速度、同步精度、网络流量和服务器负载</p><div class="hint-container tip"><p class="hint-container-title">提示</p><p><strong>响应速度与流畅度</strong></p><ul><li>高 Tick Rate <ul><li>动作更即时：玩家操作到服务器响应的延迟更低</li><li>战斗更精准：伤害判定、命中检测更细腻</li></ul></li><li>低 Tick Rate <ul><li>可能出现&quot;打中但未命中&quot;的同步问题</li></ul></li></ul><hr><p><strong>网络流量与带宽</strong></p><ul><li>高 Tick Rate <ul><li>数据包更频繁 → 占用更多带宽(每个玩家上行/下行流量增加)；30 tick服务器 vs 60 tick服务器，后者流量接近翻倍</li></ul></li><li>低 Tick Rate <ul><li>节省带宽，适合网络条件差或玩家数量多的场景</li></ul></li></ul><hr><p><strong>服务器性能消耗</strong></p><ul><li>高 Tick Rate <ul><li>CPU需更频繁处理游戏逻辑 → 服务器负载更高，可能需更强硬件</li><li>若硬件不足，会导致Tick丢失(实际更新率低于设定值)</li></ul></li><li>低 Tick Rate <ul><li>对CPU压力小，低成本服务器也能支持更多玩家</li></ul></li></ul><hr><p><strong>同步精度</strong></p><ul><li>高 Tick Rate <ul><li>玩家间位置、状态同步更实时，减少&quot;瞬移&quot;、&quot;穿墙&quot;等同步问题</li></ul></li><li>低 Tick Rate <ul><li>同步间隔大，高速移动单位可能表现不连贯</li></ul></li></ul></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>如果玩家本身的延迟就很高，饥荒服务器的高Tick Rate反而会放大抖动，降低玩家体验</p></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>Tick Rate还需客户端同步配置，如果服务器为60tick，客户端为15tick，那么将以15tick进行通信</p></div><h2 id="保存配置" tabindex="-1"><a class="header-anchor" href="#保存配置"><span>保存配置</span></a></h2><p>点击右上角的<strong>提交按钮</strong>按钮即可保存设置，如果没有更改设置内容，点击<strong>提交</strong>后不会触发保存操作</p>',78)]))}const C=t(y,[["render",b]]),B=JSON.parse('{"path":"/docs/setting/system.html","title":"系统","lang":"zh-CN","frontmatter":{"title":"系统","icon":"laptop-file","order":5,"date":"2025-06-13T00:00:00.000Z","description":"提示 该页面位于 设置-系统 系统设置分为两部分：全局设置和集群设置，全局设置影响整个平台的所有集群，仅管理员可修改，集群设置影响当前集群，管理员和拥有对应集群权限的用户可修改 提示 无论是全局设置还是集群设置，涉及到重启(定时重启等)功能，平台会将设定的时间提前15分钟 例如，定时重启的时间为06:30:00，那么平台会在06:15:00的时候开始运...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"系统\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-06-13T00:00:00.000Z\\",\\"dateModified\\":\\"2025-08-26T02:24:54.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"miracleEverywhere\\",\\"url\\":\\"https://github.com/miracleEverywhere\\"}]}"],["meta",{"property":"og:url","content":"https://miraclesses.top/docs/setting/system.html"}],["meta",{"property":"og:site_name","content":"饥荒管理平台"}],["meta",{"property":"og:title","content":"系统"}],["meta",{"property":"og:description","content":"提示 该页面位于 设置-系统 系统设置分为两部分：全局设置和集群设置，全局设置影响整个平台的所有集群，仅管理员可修改，集群设置影响当前集群，管理员和拥有对应集群权限的用户可修改 提示 无论是全局设置还是集群设置，涉及到重启(定时重启等)功能，平台会将设定的时间提前15分钟 例如，定时重启的时间为06:30:00，那么平台会在06:15:00的时候开始运..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-26T02:24:54.000Z"}],["meta",{"property":"article:published_time","content":"2025-06-13T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-26T02:24:54.000Z"}]]},"git":{"createdTime":1749544381000,"updatedTime":1756175094000,"contributors":[{"name":"miracleEverywhere","username":"miracleEverywhere","email":"763483966@qq.com","commits":6,"url":"https://github.com/miracleEverywhere"}]},"readingTime":{"minutes":9.85,"words":2956},"filePathRelative":"docs/setting/system.md","autoDesc":true}');export{C as comp,B as data};
